{"ast":null,"code":"var _jsxFileName = \"/Users/riannacleary/Desktop/mod5/galaxybnb_frontend/src/components/BookingForm.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Select } from 'semantic-ui-react';\nimport { DatesRangeInput } from 'semantic-ui-calendar-react';\nlet numberOptions = [{\n  text: '1',\n  value: '1'\n}, {\n  text: '2',\n  value: '2'\n}, {\n  text: '3',\n  value: '3'\n}, {\n  text: '4',\n  value: '4'\n}, {\n  text: '5',\n  value: '5'\n}, {\n  text: '6',\n  value: '6'\n}, {\n  text: '7',\n  value: '7'\n}, {\n  text: '8',\n  value: '8'\n}, {\n  text: '9',\n  value: '9'\n}, {\n  text: '10',\n  value: '10'\n}];\nconst initialState = {\n  planets: [],\n  datesRange: '',\n  numOfTravelers: '',\n  selectedPlanet: '',\n  planetError: '',\n  datesError: '',\n  travelersError: ''\n};\n\nclass BookingForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.validate = () => {\n      let planetError = '';\n      let datesError = '';\n      let travelersError = '';\n      let {\n        selectedPlanet,\n        datesRange,\n        numOfTravelers\n      } = this.state;\n      let isValid = true;\n\n      if (!selectedPlanet) {\n        planetError = 'Please select a planet!';\n        isValid = false;\n      }\n\n      if (!datesRange) {\n        datesError = 'Please select a date!';\n        isValid = false;\n      }\n\n      if (!numOfTravelers) {\n        travelersError = 'Please select a number of travelers!';\n        isValid = false;\n      } // if (selectedPlanet || datesRange || numOfTravelers) {\n\n\n      this.setState({\n        planetError,\n        datesError,\n        travelersError\n      });\n      return isValid; // }\n      // return true\n    };\n\n    this.handleSubmit = (evt, id) => {\n      evt.preventDefault();\n      const isValid = this.validate();\n      let {\n        selectedPlanet\n      } = this.state;\n\n      if (isValid) {\n        this.setState(initialState);\n        this.props.history.push(`/places/${selectedPlanet}`);\n        this.valuesFromBooking();\n      }\n    };\n\n    this.formatOptions = () => {\n      return this.state.planets.map(planet => {\n        return {\n          text: planet.name,\n          value: planet.id\n        };\n      });\n    };\n\n    this.handleChange = (event, {\n      name,\n      value\n    }) => {\n      if (this.state.hasOwnProperty(name)) {\n        this.setState({\n          [name]: value\n        });\n      }\n    };\n\n    this.valuesFromBooking = () => {\n      let {\n        planets,\n        selectedPlanet,\n        datesRange,\n        numOfTravelers\n      } = this.state;\n      this.props.sendStateToMain(planets, selectedPlanet, datesRange, numOfTravelers);\n    };\n  }\n\n  componentDidMount() {\n    //\n    fetch(`http://localhost:4000/planets`).then(r => r.json()).then(planetArr => {\n      // console.log(planetArr[0].name)\n      this.setState({\n        planets: planetArr\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state); // console.log(this.props.stateFromMain)\n\n    return React.createElement(\"div\", {\n      className: \"booking-form\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      control: Select,\n      label: \"Choose a Planet\",\n      options: this.formatOptions(),\n      onChange: this.handleChange,\n      name: 'selectedPlanet',\n      placeholder: \"Planets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.planetError), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(DatesRangeInput, {\n      className: \"dateForm\",\n      name: \"datesRange\",\n      label: \"From - To\",\n      placeholder: \"From - To\",\n      value: this.state.datesRange,\n      iconPosition: \"left\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      label: \"How many travelers?\",\n      options: numberOptions,\n      onChange: this.handleChange,\n      name: 'numOfTravelers',\n      placeholder: \"Travelers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      inverted: true,\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default BookingForm;","map":{"version":3,"sources":["/Users/riannacleary/Desktop/mod5/galaxybnb_frontend/src/components/BookingForm.jsx"],"names":["React","Component","Form","Select","DatesRangeInput","numberOptions","text","value","initialState","planets","datesRange","numOfTravelers","selectedPlanet","planetError","datesError","travelersError","BookingForm","state","validate","isValid","setState","handleSubmit","evt","id","preventDefault","props","history","push","valuesFromBooking","formatOptions","map","planet","name","handleChange","event","hasOwnProperty","sendStateToMain","componentDidMount","fetch","then","r","json","planetArr","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Select } from 'semantic-ui-react'\nimport { DatesRangeInput } from 'semantic-ui-calendar-react';\n\n\nlet numberOptions = [\n  {text: '1', value: '1'},\n  {text: '2', value: '2'},\n  {text: '3', value: '3'},\n  {text: '4', value: '4'},\n  {text: '5', value: '5'},\n  {text: '6', value: '6'},\n  {text: '7', value: '7'},\n  {text: '8', value: '8'},\n  {text: '9', value: '9'},\n  {text: '10', value: '10'}\n]\n\nconst initialState = {\n  planets: [],\n  datesRange: '',\n  numOfTravelers: '',\n  selectedPlanet: '',\n  planetError: '',\n  datesError: '',\n  travelersError: ''\n}\n\n\nclass BookingForm extends Component {\n\n  state = initialState\n\n  validate = () => {\n    let planetError = ''\n    let datesError = ''\n    let travelersError = ''\n    let {selectedPlanet, datesRange, numOfTravelers} = this.state\n    let isValid = true\n\n    if (!selectedPlanet) {\n      planetError = 'Please select a planet!'\n      isValid = false\n    }\n\n    if (!datesRange) {\n      datesError = 'Please select a date!'\n      isValid = false\n    }\n\n    if (!numOfTravelers) {\n      travelersError = 'Please select a number of travelers!'\n      isValid = false\n    }\n\n    // if (selectedPlanet || datesRange || numOfTravelers) {\n      this.setState({planetError, datesError, travelersError})\n      return isValid\n    // }\n    // return true\n  }\n\n  handleSubmit = (evt, id) => {\n    evt.preventDefault()\n    const isValid = this.validate()\n    let {selectedPlanet} = this.state\n\n    if (isValid) {\n      this.setState(initialState)\n      this.props.history.push(`/places/${selectedPlanet}`)\n      this.valuesFromBooking()\n    }\n  }\n\n  componentDidMount() {\n    //\n    fetch(`http://localhost:4000/planets`)\n        .then(r => r.json())\n        .then((planetArr) => {\n          // console.log(planetArr[0].name)\n          this.setState({\n            planets: planetArr\n          });\n        })\n  }\n\n  formatOptions = () => {\n    return this.state.planets.map(planet => {\n      return {\n        text: planet.name,\n        value: planet.id\n      }\n    })\n  }\n\n  handleChange = (event, {name, value}) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value });\n    }\n  }\n\n  valuesFromBooking = () => {\n    let {planets, selectedPlanet, datesRange, numOfTravelers} = this.state\n      this.props.sendStateToMain(planets, selectedPlanet, datesRange, numOfTravelers)\n  }\n\n\n  render() {\n    console.log(this.state)\n    // console.log(this.props.stateFromMain)\n    return (\n      <div className='booking-form' align='center'>\n\n      <Form onSubmit={this.handleSubmit}>\n\n        <Form.Group widths='equal'>\n        <Form.Field\n            control={Select}\n            label='Choose a Planet'\n            options={this.formatOptions()}\n            onChange={this.handleChange}\n            name={'selectedPlanet'}\n            placeholder='Planets'\n          />\n        </Form.Group>\n        <div>{this.state.planetError}</div>\n        <Form.Group >\n        < DatesRangeInput\n         className='dateForm'\n         \n         name=\"datesRange\"\n         label=\"From - To\"\n         placeholder=\"From - To\"\n         value={this.state.datesRange}\n         iconPosition=\"left\"\n         onChange={this.handleChange}\n        />\n\n        </Form.Group>\n        <Form.Group widths='equal'>\n        <Form.Select\n          label='How many travelers?'\n          options={numberOptions}\n          onChange={this.handleChange}\n          name={'numOfTravelers'}\n          placeholder='Travelers'\n        />\n      </Form.Group>\n\n        <Form.Button inverted color='red'>Submit</Form.Button>\n      </Form>\n\n      </div>\n    );\n  }\n\n}\n\nexport default BookingForm;\n"]},"metadata":{},"sourceType":"module"}
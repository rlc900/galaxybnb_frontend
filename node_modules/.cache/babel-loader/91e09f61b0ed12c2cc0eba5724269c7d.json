{"ast":null,"code":"var _jsxFileName = \"/Users/riannacleary/Desktop/mod5/galaxybnb_frontend/src/containers/MainContainer.jsx\";\nimport React, { Component } from 'react';\nimport UserForm from '../components/UserForm';\nimport NavBar from '../components/NavBar';\nimport Home from '../components/Home';\nimport Profile from '../components/Profile';\nimport PlanetLocations from '../components/PlanetLocations';\nimport { Switch, Route } from 'react-router';\nimport { withRouter } from 'react-router-dom';\n\nclass MainContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        username: '',\n        reviewed_locations: []\n      },\n      token: '',\n      error_message: '',\n      planets: [],\n      datesRange: '',\n      numOfTravelers: '',\n      selectedPlanet: '',\n      planetObj: {}\n    };\n\n    this.addReview = reviewObj => {\n      // debugger\n      let modifiedLocations = this.state.planetObj.locations.map(location => {\n        if (location.id === reviewObj.reviewed_location_id) {\n          return { ...location,\n            reviews: [...location.reviews, reviewObj]\n          };\n        } else {\n          return location;\n        }\n      });\n      this.setState({\n        planetObj: { ...this.state.planetObj,\n          locations: modifiedLocations\n        }\n      });\n    };\n\n    this.addBooking = bookingObj => {\n      let modifiedBookings = [...this.state.user.locationsBooked, bookingObj];\n      this.setState({\n        user: { ...this.state.user,\n          locationsBooked: modifiedBookings\n        }\n      }, () => {\n        this.props.history.push('/profile');\n      });\n    };\n\n    this.handleSubmit = (userInfo, route, method) => {\n      // console.log(route)\n      // console.log('Form has been submitted')\n      fetch(`http://localhost:4000${route}`, {\n        method: method,\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(userData => {\n        if (!userData.error) {\n          localStorage.setItem('token', userData.token);\n          this.setState({\n            user: { ...userData.user,\n              username: userData.user.username\n            },\n            token: userData.token\n          }, () => {\n            this.props.history.push('/profile');\n          });\n        }\n\n        this.setState({\n          error_message: userData.error\n        }); // console.log(userData)\n      });\n    };\n\n    this.renderForm = routerProps => {\n      let {\n        pathname\n      } = routerProps.location;\n      let {\n        error_message,\n        user\n      } = this.state; // console.log(routerProps)\n\n      if (pathname === '/signup') {\n        return React.createElement(UserForm, Object.assign({\n          formName: \"Signup\",\n          handleFormSubmit: this.handleSubmit,\n          error: error_message,\n          user: user\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }));\n      } else if (pathname === '/login') {\n        return React.createElement(UserForm, Object.assign({\n          formName: \"Login\",\n          handleFormSubmit: this.handleSubmit,\n          error: error_message,\n          user: user\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }));\n      } else if (routerProps.location.pathname === '/update') {\n        return React.createElement(UserForm, Object.assign({\n          formName: \"update username\",\n          handleFormSubmit: this.handleSubmit,\n          error: error_message,\n          user: user\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.renderProfile = () => {\n      return React.createElement(Profile, {\n        handleDelete: this.handleDelete,\n        stateFromMain: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      });\n    };\n\n    this.renderLogout = routerProps => {\n      this.setState({\n        user: {},\n        token: ''\n      });\n      localStorage.clear();\n      routerProps.history.push('/home');\n    };\n\n    this.handleDelete = id => {\n      fetch(`http://localhost:4000/users/${id}`, {\n        method: 'DELETE'\n      }).then(r => r.json()).then(() => {\n        localStorage.clear();\n        window.location.href = \"/home\";\n      });\n    };\n\n    this.sendStateToMain = (planets, selectedPlanet, datesRange, numOfTravelers) => {\n      this.setState({\n        selectedPlanet: selectedPlanet,\n        datesRange: datesRange,\n        numOfTravelers: numOfTravelers,\n        planets: planets\n      });\n    };\n\n    this.getPlanetObj = newPlanetObj => {\n      this.setState({\n        planetObj: newPlanetObj\n      });\n    };\n  }\n\n  componentDidMount() {\n    // info persisted when page refreshes\n    if (localStorage.getItem('token')) {\n      let token = localStorage.getItem('token');\n      fetch(`http://localhost:4000/persist`, {\n        headers: {\n          'Authorization': `bearer ${token}`\n        }\n      }).then(r => r.json()).then(userData => {\n        if (userData.token) {\n          localStorage.setItem('token', userData.token);\n          this.setState({\n            user: { ...userData.user,\n              username: userData.user.username\n            },\n            token: userData.token\n          }, () => {\n            this.props.history.push('/home');\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    // console.log('MAIN CONT STATE', this.state)\n    // console.log('STATE FROM MAIN_CONTAINER', this.state)\n    return React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: ['/', '/home'],\n      render: props => React.createElement(Home, Object.assign({}, props, {\n        sendStateToMain: this.sendStateToMain,\n        stateFromMain: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: this.renderForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: this.renderForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: this.renderProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/logout\",\n      render: this.renderLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/update\",\n      render: this.renderForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/places/:id\",\n      render: props => React.createElement(PlanetLocations, Object.assign({}, props, {\n        addBooking: this.addBooking,\n        getPlanetObj: this.getPlanetObj,\n        stateFromMain: this.state,\n        addReview: this.addReview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(MainContainer);","map":{"version":3,"sources":["/Users/riannacleary/Desktop/mod5/galaxybnb_frontend/src/containers/MainContainer.jsx"],"names":["React","Component","UserForm","NavBar","Home","Profile","PlanetLocations","Switch","Route","withRouter","MainContainer","state","user","username","reviewed_locations","token","error_message","planets","datesRange","numOfTravelers","selectedPlanet","planetObj","addReview","reviewObj","modifiedLocations","locations","map","location","id","reviewed_location_id","reviews","setState","addBooking","bookingObj","modifiedBookings","locationsBooked","props","history","push","handleSubmit","userInfo","route","method","fetch","headers","body","JSON","stringify","then","r","json","userData","error","localStorage","setItem","renderForm","routerProps","pathname","renderProfile","handleDelete","renderLogout","clear","window","href","sendStateToMain","getPlanetObj","newPlanetObj","componentDidMount","getItem","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AAEA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,cAA5B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAIA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCU,KAFoC,GAE5B;AACNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,EADN;AAEJC,QAAAA,kBAAkB,EAAE;AAFhB,OADA;AAKNC,MAAAA,KAAK,EAAE,EALD;AAMNC,MAAAA,aAAa,EAAE,EANT;AAONC,MAAAA,OAAO,EAAE,EAPH;AAQNC,MAAAA,UAAU,EAAE,EARN;AASNC,MAAAA,cAAc,EAAE,EATV;AAUNC,MAAAA,cAAc,EAAE,EAVV;AAWNC,MAAAA,SAAS,EAAE;AAXL,KAF4B;;AAAA,SAgBpCC,SAhBoC,GAgBvBC,SAAD,IAAe;AACzB;AACA,UAAIC,iBAAiB,GAAG,KAAKb,KAAL,CAAWU,SAAX,CAAqBI,SAArB,CAA+BC,GAA/B,CAAoCC,QAAD,IAAc;AACrE,YAAIA,QAAQ,CAACC,EAAT,KAAgBL,SAAS,CAACM,oBAA9B,EAAoD;AAClD,iBAAO,EAAC,GAAGF,QAAJ;AAAcG,YAAAA,OAAO,EAAE,CAAC,GAAGH,QAAQ,CAACG,OAAb,EAAsBP,SAAtB;AAAvB,WAAP;AACD,SAFD,MAEO;AACL,iBAAOI,QAAP;AACD;AACF,OANqB,CAAxB;AAOI,WAAKI,QAAL,CAAc;AACZV,QAAAA,SAAS,EAAE,EAAC,GAAG,KAAKV,KAAL,CAAWU,SAAf;AAA0BI,UAAAA,SAAS,EAAED;AAArC;AADC,OAAd;AAGL,KA5BmC;;AAAA,SA8BpCQ,UA9BoC,GA8BtBC,UAAD,IAAgB;AAC3B,UAAIC,gBAAgB,GAAG,CAAC,GAAG,KAAKvB,KAAL,CAAWC,IAAX,CAAgBuB,eAApB,EAAqCF,UAArC,CAAvB;AACA,WAAKF,QAAL,CAAc;AACZnB,QAAAA,IAAI,EAAE,EAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf;AAAqBuB,UAAAA,eAAe,EAAED;AAAtC;AADM,OAAd,EAGG,MAAM;AACP,aAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,OALD;AAOD,KAvCmC;;AAAA,SAiEpCC,YAjEoC,GAiErB,CAACC,QAAD,EAAWC,KAAX,EAAkBC,MAAlB,KAA6B;AAC1C;AACA;AACAC,MAAAA,KAAK,CAAE,wBAAuBF,KAAM,EAA/B,EAAkC;AACrCC,QAAAA,MAAM,EAAEA,MAD6B;AAErCE,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF4B;AAKrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJP,QADI;AAL+B,OAAlC,CAAL,CASCQ,IATD,CASMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EATX,EAUCF,IAVD,CAUMG,QAAQ,IAAI;AAChB,YAAI,CAACA,QAAQ,CAACC,KAAd,EAAqB;AACnBC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACpC,KAAvC;AACA,eAAKgB,QAAL,CAAc;AACZnB,YAAAA,IAAI,EAAE,EAAC,GAAGuC,QAAQ,CAACvC,IAAb;AAAmBC,cAAAA,QAAQ,EAAEsC,QAAQ,CAACvC,IAAT,CAAcC;AAA3C,aADM;AAEZE,YAAAA,KAAK,EAAEoC,QAAQ,CAACpC;AAFJ,WAAd,EAGG,MAAM;AACN,iBAAKqB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACF,WALD;AAMD;;AACD,aAAKP,QAAL,CAAc;AACZf,UAAAA,aAAa,EAAEmC,QAAQ,CAACC;AADZ,SAAd,EAVgB,CAahB;AACD,OAxBD;AAyBD,KA7FmC;;AAAA,SAgGtCG,UAhGsC,GAgGxBC,WAAD,IAAiB;AAC5B,UAAI;AAACC,QAAAA;AAAD,UAAaD,WAAW,CAAC7B,QAA7B;AACA,UAAI;AAACX,QAAAA,aAAD;AAAgBJ,QAAAA;AAAhB,UAAwB,KAAKD,KAAjC,CAF4B,CAG1B;;AACA,UAAI8C,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,eAAO,oBAAC,QAAD;AAAU,UAAA,QAAQ,EAAC,QAAnB;AAA4B,UAAA,gBAAgB,EAAE,KAAKlB,YAAnD;AAAiE,UAAA,KAAK,EAAEvB,aAAxE;AAAuF,UAAA,IAAI,EAAEJ;AAA7F,WAAuG4C,WAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAFD,MAEO,IAAIC,QAAQ,KAAK,QAAjB,EAA2B;AAChC,eAAO,oBAAC,QAAD;AAAU,UAAA,QAAQ,EAAC,OAAnB;AAA2B,UAAA,gBAAgB,EAAE,KAAKlB,YAAlD;AAAgE,UAAA,KAAK,EAAEvB,aAAvE;AAAsF,UAAA,IAAI,EAAEJ;AAA5F,WAAsG4C,WAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAFM,MAEC,IAAIA,WAAW,CAAC7B,QAAZ,CAAqB8B,QAArB,KAAkC,SAAtC,EAAiD;AACvD,eAAO,oBAAC,QAAD;AAAU,UAAA,QAAQ,EAAC,iBAAnB;AAAqC,UAAA,gBAAgB,EAAE,KAAKlB,YAA5D;AAA0E,UAAA,KAAK,EAAEvB,aAAjF;AAAgG,UAAA,IAAI,EAAEJ;AAAtG,WAAgH4C,WAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;AACF,KA3GmC;;AAAA,SA6GpCE,aA7GoC,GA6GpB,MAAM;AACpB,aAAO,oBAAC,OAAD;AAAS,QAAA,YAAY,EAAE,KAAKC,YAA5B;AAA0C,QAAA,aAAa,EAAE,KAAKhD,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KA/GmC;;AAAA,SAiHpCiD,YAjHoC,GAiHpBJ,WAAD,IAAiB;AAC9B,WAAKzB,QAAL,CAAc;AACZnB,QAAAA,IAAI,EAAE,EADM;AAEZG,QAAAA,KAAK,EAAE;AAFK,OAAd;AAIAsC,MAAAA,YAAY,CAACQ,KAAb;AACAL,MAAAA,WAAW,CAACnB,OAAZ,CAAoBC,IAApB,CAAyB,OAAzB;AACD,KAxHmC;;AAAA,SA4HpCqB,YA5HoC,GA4HpB/B,EAAD,IAAQ;AACrBe,MAAAA,KAAK,CAAE,+BAA8Bf,EAAG,EAAnC,EAAsC;AACzCc,QAAAA,MAAM,EAAE;AADiC,OAAtC,CAAL,CAGCM,IAHD,CAGMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAHX,EAICF,IAJD,CAIM,MAAM;AACVK,QAAAA,YAAY,CAACQ,KAAb;AACAC,QAAAA,MAAM,CAACnC,QAAP,CAAgBoC,IAAhB,GAAuB,OAAvB;AACD,OAPD;AAQD,KArImC;;AAAA,SAuIpCC,eAvIoC,GAuIlB,CAAC/C,OAAD,EAAUG,cAAV,EAA0BF,UAA1B,EAAsCC,cAAtC,KAAyD;AACzE,WAAKY,QAAL,CAAc;AACZX,QAAAA,cAAc,EAAEA,cADJ;AAEZF,QAAAA,UAAU,EAAEA,UAFA;AAGZC,QAAAA,cAAc,EAAEA,cAHJ;AAIZF,QAAAA,OAAO,EAAEA;AAJG,OAAd;AAMD,KA9ImC;;AAAA,SAiJpCgD,YAjJoC,GAiJpBC,YAAD,IAAkB;AAC/B,WAAKnC,QAAL,CAAc;AAACV,QAAAA,SAAS,EAAE6C;AAAZ,OAAd;AACD,KAnJmC;AAAA;;AAyCpCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAGd,YAAY,CAACe,OAAb,CAAqB,OAArB,CAAH,EAAkC;AAChC,UAAIrD,KAAK,GAAGsC,YAAY,CAACe,OAAb,CAAqB,OAArB,CAAZ;AACAzB,MAAAA,KAAK,CAAE,+BAAF,EAAkC;AACrCC,QAAAA,OAAO,EAAE;AACT,2BAAkB,UAAS7B,KAAM;AADxB;AAD4B,OAAlC,CAAL,CAKCiC,IALD,CAKMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALX,EAMCF,IAND,CAMMG,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACpC,KAAb,EAAoB;AAClBsC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACpC,KAAvC;AACA,eAAKgB,QAAL,CAAc;AACZnB,YAAAA,IAAI,EAAE,EAAC,GAAGuC,QAAQ,CAACvC,IAAb;AAAmBC,cAAAA,QAAQ,EAAEsC,QAAQ,CAACvC,IAAT,CAAcC;AAA3C,aADM;AAEZE,YAAAA,KAAK,EAAEoC,QAAQ,CAACpC;AAFJ,WAAd,EAGG,MAAM;AACN,iBAAKqB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACF,WALD;AAMD;AACF,OAhBD;AAiBD;AACF;;AAuFD+B,EAAAA,MAAM,GAAG;AACP;AACA;AACA,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,OAAN,CAAnB;AAAmC,MAAA,MAAM,EAAGjC,KAAD,IAAW,oBAAC,IAAD,oBAAUA,KAAV;AAAiB,QAAA,eAAe,EAAE,KAAK4B,eAAvC;AAAwD,QAAA,aAAa,EAAE,KAAKrD,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,MAAM,EAAE,KAAK4C,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAE,KAAKA,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,MAAM,EAAE,KAAKG,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,MAAM,EAAE,KAAKE,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,MAAM,EAAE,KAAKL,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,MAAM,EAAGnB,KAAD,IAAW,oBAAC,eAAD,oBAAqBA,KAArB;AAA4B,QAAA,UAAU,EAAE,KAAKJ,UAA7C;AAAyD,QAAA,YAAY,EAAE,KAAKiC,YAA5E;AAA0F,QAAA,aAAa,EAAE,KAAKtD,KAA9G;AAAqH,QAAA,SAAS,EAAE,KAAKW,SAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAFA,CADF;AAgBC;;AAzKiC;;AA6KtC,eAAeb,UAAU,CAACC,aAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport UserForm from '../components/UserForm'\nimport NavBar from '../components/NavBar'\nimport Home from '../components/Home'\nimport Profile from '../components/Profile'\nimport PlanetLocations from '../components/PlanetLocations'\n\nimport {Switch, Route} from 'react-router'\nimport {withRouter} from 'react-router-dom'\n\n\n\nclass MainContainer extends Component {\n\n  state = {\n    user: {\n      username: '',\n      reviewed_locations: []\n      },\n    token: '',\n    error_message: '',\n    planets: [],\n    datesRange: '',\n    numOfTravelers: '',\n    selectedPlanet: '',\n    planetObj: {}\n  }\n\n  addReview = (reviewObj) => {\n    // debugger\n    let modifiedLocations = this.state.planetObj.locations.map((location) => {\n        if (location.id === reviewObj.reviewed_location_id) {\n          return {...location, reviews: [...location.reviews, reviewObj]}\n        } else {\n          return location\n        }\n      })\n        this.setState({\n          planetObj: {...this.state.planetObj, locations: modifiedLocations}\n        })\n  }\n\n  addBooking = (bookingObj) => {\n    let modifiedBookings = [...this.state.user.locationsBooked, bookingObj]\n    this.setState({\n      user: {...this.state.user, locationsBooked: modifiedBookings}\n\n    }, () => {\n      this.props.history.push('/profile')\n    })\n\n  }\n\n  componentDidMount() {\n    // info persisted when page refreshes\n    if(localStorage.getItem('token')) {\n      let token = localStorage.getItem('token')\n      fetch(`http://localhost:4000/persist`, {\n        headers: {\n        'Authorization': `bearer ${token}`\n      }\n      })\n      .then(r => r.json())\n      .then(userData => {\n        if (userData.token) {\n          localStorage.setItem('token', userData.token)\n          this.setState({\n            user: {...userData.user, username: userData.user.username},\n            token: userData.token\n          }, () => {\n             this.props.history.push('/home')\n          })\n        }\n      })\n    }\n  }\n\n  handleSubmit = (userInfo, route, method) => {\n    // console.log(route)\n    // console.log('Form has been submitted')\n    fetch(`http://localhost:4000${route}`, {\n      method: method,\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(\n        userInfo\n      )\n    })\n    .then(r => r.json())\n    .then(userData => {\n      if (!userData.error) {\n        localStorage.setItem('token', userData.token)\n        this.setState({\n          user: {...userData.user, username: userData.user.username},\n          token: userData.token\n        }, () => {\n           this.props.history.push('/profile')\n        })\n      }\n      this.setState({\n        error_message: userData.error\n      })\n      // console.log(userData)\n    })\n  }\n\n\nrenderForm = (routerProps) => {\n  let {pathname} = routerProps.location\n  let {error_message, user} = this.state\n    // console.log(routerProps)\n    if (pathname === '/signup') {\n      return <UserForm formName='Signup' handleFormSubmit={this.handleSubmit} error={error_message} user={user} {...routerProps}/>\n    } else if (pathname === '/login') {\n      return <UserForm formName='Login' handleFormSubmit={this.handleSubmit} error={error_message} user={user} {...routerProps}/>\n    }  else if (routerProps.location.pathname === '/update') {\n      return <UserForm formName='update username' handleFormSubmit={this.handleSubmit} error={error_message} user={user} {...routerProps}/>\n    }\n  }\n\n  renderProfile = () => {\n    return <Profile handleDelete={this.handleDelete} stateFromMain={this.state}/>\n  }\n\n  renderLogout = (routerProps) => {\n    this.setState({\n      user: {},\n      token: ''\n    })\n    localStorage.clear()\n    routerProps.history.push('/home')\n  }\n\n\n\n  handleDelete = (id) => {\n    fetch(`http://localhost:4000/users/${id}`, {\n      method: 'DELETE'\n    })\n    .then(r => r.json())\n    .then(() => {\n      localStorage.clear()\n      window.location.href = \"/home\"\n    })\n  }\n\n  sendStateToMain = (planets, selectedPlanet, datesRange, numOfTravelers) => {\n    this.setState({\n      selectedPlanet: selectedPlanet,\n      datesRange: datesRange,\n      numOfTravelers: numOfTravelers,\n      planets: planets\n    })\n  }\n\n\n  getPlanetObj = (newPlanetObj) => {\n    this.setState({planetObj: newPlanetObj})\n  }\n\n\n  render() {\n    // console.log('MAIN CONT STATE', this.state)\n    // console.log('STATE FROM MAIN_CONTAINER', this.state)\n    return (\n      <div className='main-container'>\n      <NavBar />\n      <Switch>\n        <Route exact path={['/', '/home']} render={(props) => <Home {...props} sendStateToMain={this.sendStateToMain} stateFromMain={this.state}/>}/>\n        <Route path='/signup' render={this.renderForm}/>\n        <Route path='/login' render={this.renderForm}/>\n        <Route path='/profile' render={this.renderProfile}/>\n        <Route path='/logout' render={this.renderLogout}/>\n        <Route path='/update' render={this.renderForm}/>\n        <Route path='/places/:id' render={(props) => <PlanetLocations {...props} addBooking={this.addBooking} getPlanetObj={this.getPlanetObj} stateFromMain={this.state} addReview={this.addReview}/>}/>\n\n\n      </Switch>\n      </div>\n      );\n    }\n\n}\n\nexport default withRouter(MainContainer);\n"]},"metadata":{},"sourceType":"module"}